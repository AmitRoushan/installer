# Copyright (c) 2018 Huawei Technologies Co., Ltd. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: set script dir permissions
  file:
    path: ./script
    mode: 0755
    recurse: yes
  ignore_errors: yes
  become: yes

- name: check ansible version
  shell: "{{ item }}"
  with_items:
    - bash ./script/check_ansible_version.sh
  become: yes

- name: run the equivalent of "apt-get update" as a separate step
  apt:
    update_cache: yes

- name: install system packages
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - make
    - gcc
    - python-pip
    - open-iscsi

- name: install Red Hat system packages
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - librados-devel
    - librbd-devel
  when: ansible_os_family == "RedHat"

- name: install Ubuntu system packages
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - librados-dev
    - librbd-dev
  when: ansible_os_family == "Debian"

- name: create multi-cloud work directory if it doesn't exist
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - "{{ multi_config_dir }}"

- name: include scenarios/repository.yml when installing from repository
  include: scenarios/repository.yml

- name: install keystone
  shell: "{{ item }}"
  with_items:
    - bash ./script/keystone_multi.sh install
  become: yes

- name: install docker-py package with pip when enabling containerized deployment
  pip:
    name: docker-py

- name: run dashboard containerized service
  docker_container:
    name: dashboard
    image: "{{ dashboard_docker_image }}"
    state: started
    network_mode: host
    restart_policy: always

- name: make docker
  shell: make docker
  environment:
    GOPATH: "{{ go_path }}"
  args:
    chdir: "{{ go_path }}/src/github.com/opensds/multi-cloud"

- name: start service
  shell: docker-compose up -d
  environment:
    GOPATH: "{{ go_path }}"
  args:
    chdir: "{{ go_path }}/src/github.com/opensds/multi-cloud"

- name: wait for service to start normally
  wait_for:
    host: 127.0.0.1
    port: 8089
    delay: 15
    timeout: 120
  ignore: true

